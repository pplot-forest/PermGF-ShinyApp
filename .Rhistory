shiny::runApp()
source("~/Travail/Outils/GitHub/PermGF-ShinyApp/global.R", echo=TRUE)
runApp()
runApp()
runApp()
runApp()
runApp('~/Travail/Outils/GitHub/PermAFI-ShinyApp copie')
runApp('~/Travail/Outils/GitHub/PermAFI-ShinyApp copie')
setwd("~/Travail/Outils/GitHub/PermGF-ShinyApp")
getwd()
shiny::runApp()
# library(rdrop2)
librarry(easypackages)
# library(rdrop2)
library(easypackages)
install.packages("easypackages")
install_packages("shiny",
"shinythemes",
"shinydashboard",
"shinyjs",
"shinyWidgets",
"shinyFiles",
"shiny.i18n",
"stringr",
"openxlsx",
"rmarkdown",
"tools",
"tidyr",
"dplyr",
"knitr",
"maptools",
"xtable",
"ggplot2",
"ggrepel",
"ggthemes",
"scales",
"gridExtra",
"rgeos",
"rgdal",
"gdata",
"grid",
"fmsb",
"rlang"
)
# library(rdrop2)
library(easypackages)
install_packages("shiny",
"shinythemes",
"shinydashboard",
"shinyjs",
"shinyWidgets",
"shinyFiles",
"shiny.i18n",
"stringr",
"openxlsx",
"rmarkdown",
"tools",
"tidyr",
"dplyr",
"knitr",
"maptools",
"xtable",
"ggplot2",
"ggrepel",
"ggthemes",
"scales",
"gridExtra",
"rgeos",
"rgdal",
"gdata",
"grid",
"fmsb",
"rlang"
)
runApp()
install.packages("easypackages")
shiny::runApp()
install.packages("easypackages")
shiny::runApp()
# install_packages(
libraries(
"shiny",
"shinythemes",
"shinydashboard",
"shinyjs",
"shinyWidgets",
"shinyFiles",
"shiny.i18n",
"stringr",
"openxlsx",
"rmarkdown",
"tools",
"tidyr",
"dplyr",
"knitr",
"xtable",
"ggplot2",
"ggrepel",
"ggthemes",
"scales",
"gridExtra",
# "rgeos",
"rgdal",
"gdata",
"grid",
"fmsb",
"rlang"
)
install_package('rgdal')
install_package("rgdal")
install_packages("rgdal")
# install_packages(
libraries(
"shiny",
"shinythemes",
"shinydashboard",
"shinyjs",
"shinyWidgets",
"shinyFiles",
"shiny.i18n",
"stringr",
"openxlsx",
"rmarkdown",
"tools",
"tidyr",
"dplyr",
"knitr",
"xtable",
"ggplot2",
"ggrepel",
"ggthemes",
"scales",
"gridExtra",
# "rgeos",
# "rgdal",
"gdata",
"grid",
"fmsb",
"rlang"
)
runApp()
runApp()
runApp()
runApp()
# -- Install libraries
install.packages("easypackages")
library(easypackages)
# install_packages(
libraries(
"shiny",
"shinythemes",
"shinydashboard",
"shinyjs",
"shinyWidgets",
"shinyFiles",
"shiny.i18n",
"stringr",
"openxlsx",
"rmarkdown",
"tools",
"tidyr",
"dplyr",
"knitr",
"xtable",
"ggplot2",
"ggrepel",
"ggthemes",
"scales",
"gridExtra",
# "rgeos",
# "rgdal",
"gdata",
"grid",
"fmsb",
"rlang"
)
# -- Source codes
source('scripts/annexes.R', echo = TRUE)
source('scripts/gf_XlsTranslation.R', echo=TRUE)
source('scripts/gf_CodesTranslation.R', echo=TRUE)
source('scripts/gf_Calculs.R', echo=TRUE)
source('scripts/gf_AgregArbres.R', echo=TRUE)
source('scripts/gf_AgregPlacettes.R', echo=TRUE)
# -- paramètre interface
mega <- 200 # ? utilité de l'option ?
options(shiny.maxRequestSize = mega * 1024^2)
options(encoding = "UTF-8")
# -- fonction de traduction
i18n <- shiny.i18n::Translator$new(translation_json_path = "www/translations/translation.json")
i18n$set_translation_language("Français")
runApp()
sessionInfo
sessionInfo()
outdated <- old.packages()
if (!is.null(outdated)) {
print(outdated)
}
runApp()
install.packages("easypackages")
install.packages("DT")
runApp()
?libraries
# install_packages(
install.packages(
"shiny",
"shinythemes",
"shinydashboard",
"shinyjs",
"shinyWidgets",
"shinyFiles",
"shiny.i18n",
"stringr",
"openxlsx",
"rmarkdown",
"tools",
"tidyr",
"dplyr",
"knitr",
"xtable",
"ggplot2",
"ggrepel",
"ggthemes",
"scales",
"gridExtra",
# "rgeos",
# "rgdal",
"gdata",
"grid",
"fmsb",
"rlang",
"DT"
)
# install_packages(
# install.packages(
install.packages("shiny")
install.packages("shinythemes")
install.packages("stringr")
install.packages("openxlsx")
install.packages("rmarkdown")
install.packages("tools")
install.packages("tidyr")
install.packages("knitr")
install.packages("xtable")
install.packages("ggplot2")
install.packages("knitr")
install.packages("ggrepel")
install.packages("ggthemes")
install.packages("scales")
install.packages("gridExtra")
# install.packages("rgeos")
# install.packages("rgdal")
install.packages("gdata")
install.packages("grid")
install.packages("fmsb")
install.packages("rlang")
install.packages("fmsb")
install.packages("DT")
